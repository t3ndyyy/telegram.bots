import json
import http.client

# Токен вашего бота
BOT_TOKEN = "YOUR_BOT_TOKEN"

# Функция для отправки сообщений через Telegram API
def send_message(chat_id, text):
    conn = http.client.HTTPSConnection("api.telegram.org")
    url = f"/bot{BOT_TOKEN}/sendMessage"
    headers = {"Content-type": "application/json"}
    payload = {
        "chat_id": chat_id,
        "text": text
    }
    conn.request("POST", url, body=json.dumps(payload), headers=headers)
    response = conn.getresponse()
    print("Response:", response.status, response.reason)
    conn.close()

# Функция для обработки входящих обновлений
def handle_updates(updates):
    for update in updates:
        if "message" in update:
            message = update["message"]
            chat_id = message["chat"]["id"]
            text = message.get("text", "")

            if text == "/start":
                send_message(chat_id, "Привет! Отправь мне номер телефона, и я попробую найти информацию о нем.")
            else:
                # Фиктивная информация о номере телефона
                response = f"Информация о номере {text}:\nВладелец: Иван Иванов\nГород: Москва"
                send_message(chat_id, response)

# Функция для получения обновлений
def get_updates(offset=None):
    conn = http.client.HTTPSConnection("api.telegram.org")
    url = f"/bot{BOT_TOKEN}/getUpdates"
    if offset:
        url += f"?offset={offset}"
    conn.request("GET", url)
    response = conn.getresponse()
    data = response.read().decode("utf-8")
    conn.close()
    return json.loads(data)["result"]

# Основной цикл бота
def main():
    offset = None
    while True:
        updates = get_updates(offset)
        if updates:
            handle_updates(updates)
            offset = updates[-1]["update_id"] + 1

if __name__ == "__main__":
    main()
