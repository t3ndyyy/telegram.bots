import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import Message
import sqlite3

logging.basicConfig(level=logging.INFO)

API_TOKEN = 'BOT TOKEN'

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

conn = sqlite3.connect('contacts.db')
cursor = conn.cursor()

cursor.execute('''
CREATE TABLE IF NOT EXISTS contacts (
    user_id INTEGER PRIMARY KEY,
    username TEXT,
    phone_number TEXT
)
''')
conn.commit()

@dp.message(Command("start"))
async def send_welcome(message: Message):
    await message.answer("Привет! Отправь мне свой номер телефона, чтобы я сохранил его.")

@dp.message()
async def save_contact(message: Message):
    user_id = message.from_user.id
    username = message.from_user.username
    phone_number = message.text.strip()

    if phone_number.isdigit() and len(phone_number) >= 10:
        cursor.execute('''
        INSERT OR REPLACE INTO contacts (user_id, username, phone_number)
        VALUES (?, ?, ?)
        ''', (user_id, username, phone_number))
        conn.commit()
        await message.answer(f"Спасибо! Твой номер {phone_number} сохранен.")
    else:
        await message.answer("Пожалуйста, отправь корректный номер телефона (только цифры, минимум 10 символов).")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
